:root {
  --transition-time: 0.1s;
  --primary-color: rgb(250, 174, 41);
  --secondary-color: rgb(253, 193, 91);
}

html {
  overflow: hidden;
  height: 100vh;
  height: -webkit-fill-available;
}

body {
  margin: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  width: 100vw;
  background-color: black;
  position: relative;
  font-family: "Courier Code", Courier, "Lucida Sans Typewriter", monospace;
  user-select: none;
}

canvas {
  position: absolute;
  display: block;
  border: 0.125vmin solid white;
  opacity: 0;
  transition: opacity 2s ease-in-out;
  max-width: 100vw;
  max-height: 100vh;
  object-fit: contain;
}

canvas.visible {
  opacity: 1;
}

.text {
  position: absolute;
  top: 1.25vmin;
  left: 1.25vmin;
  color: white;
  text-shadow: 0 0 1.4vmin black;
  font-size: 2.5vmin;
  z-index: 1;
  opacity: 0;
  transition: var(--transition-time) ease-in-out;
  font-size: 5vmin;
}

#controls {
  position: fixed;
  bottom: 0;
  right: 0;
  display: flex;
  flex-direction: column;
  gap: 1.25vmin;
  padding: 1.25vmin;
  z-index: 1;
}

#controls > button {
  cursor: pointer;
  font-size: 6vmin;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1.25vmin;
  background-color: var(--primary-color);
  color: white;
  border: none;
  border-radius: 0.5vmin;
  box-shadow: 0 0 1.25vmin black;
  text-shadow: 0 0 1.4vmin black;
  transition: var(--transition-time) ease-in-out;
  touch-action: manipulation;
  width: 10vmin;
  height: 10vmin;
}

#controls > button:hover {
  background-color: var(--secondary-color);
  box-shadow: 0 0 1.25vmin var(--secondary-color);
}

.modal {
  z-index: 2;
  pointer-events: none;
  opacity: 0;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  transition: var(--transition-time) ease-in-out;
}

.modal.open {
  opacity: 1;
  pointer-events: auto;
}

.close-button {
  position: absolute;
  top: 4vmin;
  right: 4vmin;
  transition: var(--transition-time) ease-in-out;
}

.close-button:hover {
  text-shadow: 0.25vmin 0.25vmin 0.5vmin rgba(0, 0, 0, 1);
  cursor: pointer;
}

.modal-content {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: rgb(240, 240, 240);
  padding: 8vmin;
  border-radius: 0.5vmin;
  font-size: 3vmin;
  border: 1vmin solid var(--primary-color);
  color: var(--dark-bg);
}

body {
  overflow: hidden;
  height: 100vh;
  height: -webkit-fill-available; /* iOS Safari fix */
}

/* Mobile-specific button sizing for better touch targets */
@media (max-width: 768px) {
  #controls > button {
    /* Ensure buttons are large enough for touch on very small screens */
    min-width: 12vmin;
    min-height: 12vmin;
    font-size: 7vmin;
  }

  /* Adjust text positioning on mobile to avoid overlap with controls */
  .text {
    max-width: 60vw; /* Prevent text from going under controls */
    line-height: 1.1;
    word-wrap: break-word;
  }

  .modal-content {
    max-width: 90vw;
    max-height: 90vh;
    padding: 6vmin;
    font-size: 4vmin;
    overflow-y: auto;
  }
}

@media (max-width: 480px) and (orientation: portrait) {
  #controls {
    position: fixed;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 2vmin;
    width: 100%;
    padding: 2vmin;
  }

  #controls > button {
    width: 14vmin;
    height: 14vmin;
    font-size: 7vmin;
    flex: 0 0 auto;
  }

  #controls > button:nth-child(-n + 3) {
    flex-basis: calc(33% - 2vmin);
  }

  #controls > button:nth-child(n + 4) {
    flex-basis: calc(25% - 2vmin);
  }
}

@media (max-height: 480px) and (orientation: landscape) {
  .text {
    max-width: 50vw;
  }

  #controls > button {
    width: 8vmin;
    height: 8vmin;
    font-size: 5vmin;
    padding: 0.8vmin;
  }

  #controls {
    gap: 0.8vmin;
    padding: 0.8vmin;
  }
}
